%\VignetteIndexEntry{Bivariate Probability Distributions}
\documentclass {article}
\usepackage[a4paper,top=2.6cm,bottom=3.6cm,left=3.6cm,right=3.6cm]{geometry}
\usepackage{parskip,verbatim,amsmath,amssymb,color}
\usepackage[nogin]{Sweave}
\pagestyle{myheadings}
\setlength{\parskip}{0.28cm}
\DefineVerbatimEnvironment{Sinput}{Verbatim}{xleftmargin=0.75em, formatcom=\color{rin}}
\DefineVerbatimEnvironment{Soutput}{Verbatim}{xleftmargin=0.75em,formatcom=\color{rout}}
\DefineVerbatimEnvironment{Serror}{Verbatim}{xleftmargin=0.75em,formatcom=\color{rerr}}
\newcommand {\stitle}[3]
{	\title {\vspace {-0.6cm} {\normalsize \underline {#1 #2} } \\[0.8cm] {\textbf {\huge #3} } }
	\author {\textbf {Abby Spurdle} }
	\maketitle
	\markright{Spurdle, A.\hfill #1 #2\hfill}
	\thispagestyle {empty}
}
\newcommand {\sabstract}[1]
{	\begin {center}
	\begin {minipage}{14.25cm}
		{\textsl {#1} }
	\end {minipage}
	\end {center}
	\vspace {0.06cm}
}
\definecolor{rin}{rgb}{0, 0, 0.32}
\definecolor{rout}{rgb}{0, 0.14, 0}
\definecolor{rerr}{rgb}{0.5, 0.025, 0}
\SweaveOpts{keep.source=TRUE}
\SweaveOpts{eps=FALSE}
\SweaveOpts{prefix.string=temp-bivariate}
\begin{document}

<<echo=false>>=
options(continue=" ")
options(SweaveHooks=list(fig=function()
par(mar=c(4.1, 4.1, 2.6, 1.6), cex=0.7, cex.main=1)))
@

\stitle {bivariate}{0.2.2}{Bivariate Probability Distributions}

\sabstract {Contains convenience functions for constructing and plotting bivariate probability distributions (probability mass functions, probability density functions and cumulative distribution functions). Currently supports uniform (discrete and continuous), binomial, Poisson, normal, bimodal and kernel distributions.}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Introduction}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
This package contains alternatives to persp() for plotting bivariate functions.

Currently, there are convenience functions for constructing and plotting:
\begin {enumerate}
	\item Discrete bivariate uniform distributions.
	\item Bivariate binomial distributions.
	\item Bivariate Poisson distributions*.
	\item Continuous bivariate uniform distributions.
	\item Bivariate normal distributions*.
	\item Bivariate bimodal distributions*.
	\item Bivariate kernel distributions*.\\
	(Kernel density and distribution function estimation).
\end {enumerate}

Some of these distributions are simply the product of the marginal distributions. Others, marked with an * are not necessarily so.

The functions for constructing distributions take some parameters and return functions which can be evaluated for x and y, except for kernel distributions.
 
The functions for plotting discrete distributions take a function object and plot a 3d plot. The functions for plotting continuous distributions take a function object and can plot either a contour plot or a 3d plot.
 
I'm planning to add other probability distributions in the near future.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Loading The Package}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
First we need to load the bivariate package.
<<>>=
library (bivariate)
@

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Coordinate System}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
This package uses a nonstandard coordinate system. It's designed to make it simpler to view cumulative distribution functions.
\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
plot3d.empty ()
@
\end {center}

Note the directions of x and y.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Discrete Bivariate Uniform Distributions}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
We can construct a discrete bivariate uniform probability mass function as the product of two discrete univariate uniform probability mass functions.

We can use the dubvpmf() function. It takes four arguments. The a and b values of X and the a and b values of Y.

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
f = dubvpmf (0, 1, 0, 1)
plot (f)
@
\end {center}

To construct a cumulative distribution function, we can use the dubvcdf() function. It takes the same arguments as dubvpmf().

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
F = dubvcdf (0, 1, 0, 1)
plot (F)
@
\end {center}

In both cases, we can print the resulting function or evaluate it for x and y.

<<>>=
f
@

<<>>=
f (0.5, 0.5)
@

The same applies to all the other probability distributions in this package, except for kernel distributions.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Bivariate Binomial Distributions}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
One way to define a bivariate binomial distribution is to say that we have n trials. In each trial there are two independent events, each with a particular probability of success. Like flipping two coins n times.

Like the discrete bivariate uniform probability mass function, we can construct a bivariate binomial probability mass function as the product of two univariate binomial probability mass functions.

We can use the bnbvpmf() function. It takes three arguments. The number of trials and the probability of each success.

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
f = bnbvpmf (20, 0.5, 0.5)
plot (f)
@
\end {center}

To construct a cumulative distribution function, we can use the bnbvcdf() function. It takes the same arguments as bnbvpmf().

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
F = bnbvcdf (20, 0.5, 0.5)
plot (F)
@
\end {center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Bivariate Poisson Distributions*}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Based on (Karlis and Ntzoufras, 2003) we can define the bivariate Poisson probability mass function as:
\begin {equation*}
\mathbb {P} (X = x, Y = y)  = \mathrm f_{X,Y} (x, y) = e^{-(\lambda_1 + \lambda_2 + \lambda_3)} \frac{\lambda_1^x}{x!} \frac{\lambda_2^y}{y!} \sum_{k=0}^{min(x, y)} \binom {x}{k} \binom {y}{k} k! \Big( \frac{\lambda_3}{\lambda_1 \lambda_2} \Big) ^k
\end {equation*}

Where:\\
$\mathbb {E}(X) = \mathrm {var}(X) = \lambda_1 + \lambda_3$\\
$\mathbb {E}(Y) = \mathrm {var}(Y) = \lambda_2 + \lambda_3$\\
$\mathrm {cov}(X, Y) = \lambda_3$

We can use the pbvpmf() function. It takes three arguments. The mean of X, the mean of Y and the covariance between X and Y.

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
f = pbvpmf (10, 10, 2)
plot (f)
@
\end {center}

To construct a cumulative distribution function, we can use the pbvcdf() function. It takes the same arguments as pbvpmf().

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
F = pbvcdf (10, 10, 2)
plot (F)
@
\end {center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Continuous Bivariate Uniform Distributions}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Continuous bivariate uniform distributions are similiar to discrete bivariate uniform distributions. However, we have a probability density function instead of a probability mass function.

We can use the cubvpdf() function. It takes four arguments. The a and b values of X and the a and b values of Y.

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
f = cubvpdf (0, 1, 0, 1)
plot (f)
@

<<fig=TRUE, width=4.75, height=3>>=
plot (f, TRUE)
@
\end {center}

To construct a cumulative distribution function, we can use the cubvcdf() function. It takes the same arguments as cubvpdf().

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
F = cubvcdf (0, 1, 0, 1)
plot (F)
@

<<fig=TRUE, width=4.75, height=3>>=
plot (F, TRUE)
@
\end {center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Bivariate Normal Distributions*}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(Genz, Bretz, Miwa, Mi, Leisch, Scheipl and Hothorn, 2018) provide the mvtnorm package, which is used by this package.

We can construct a normal bivariate probability density function using the nbvpdf() function. It takes five arguments, the mean of X, the mean of Y, the variance of X, the variance of Y and the covariance of X and Y.

<<>>=
f = nbvpdf (0, 0, 1, 1, 0)
@

Alternatively we could use the standard deviations and correlation, using something like:

<<>>=
#f = nbvpdf (mean.x, mean,y, sd.x ^ 2, sd.y ^ 2, sd.x * sd.y * cor.xy)
@

Once we have created our object we can plot it.

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
plot (f)
@

<<fig=TRUE, width=4.75, height=3>>=
plot (f, TRUE)
@
\end {center}

We can construct a cumulative distribution function using the nbvcdf() function. It takes the same arguments as nbvpdf().

<<>>=
F = nbvcdf (0, 0, 1, 1, 0)
@

Alternatively we could use the standard deviations and correlation, using something like:
<<>>=
#F = nbvcdf (mean.x, mean,y, sd.x ^ 2, sd.y ^ 2, sd.x * sd.y * cor.xy)
@

Once we have created our object we can plot it.

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
plot (F)
@

<<fig=TRUE, width=4.75, height=3>>=
plot (F, TRUE)
@
\end {center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Comparing Normal Distributions}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
We can compare different normal distributions using different covariance parameters.

First, let's consider the bivariate distributions from the previous section with zero correlation/covariance.
\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
plot (f, all=TRUE)
@
\end {center}

Note that this requires the probability density function rather than the cumulative distribution function.

Second, let's consider bivariate distributions with positive correlation/covariance.
\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
f2 = nbvpdf (0, 0, 1, 1, 0.75)
plot (f2, all=TRUE)
@
\end {center}

Third, let's consider bivariate distributions with negative correlation/covariance.
\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
f3 = nbvpdf (0, 0, 1, 1, -0.75)
plot (f3, all=TRUE)
@
\end {center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Bivariate Bimodal Distributions*}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
One way to construct a bivariate bimodal probability density function is to construct two bivariate normal probability density functions and then add them together and divide by two.

We can construct such a probability density function using the bmbvpdf() function. It takes eight arguments. The mean of X, the mean of Y, the variance of X and the variance of Y for the first component distribution. And the mean of X, the mean of Y, the variance of X and the variance of Y for the second component distribution.

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
f = bmbvpdf (3.5, 0, 1, 1, 6.5, 0, 1, 1)
plot (f)
@

<<fig=TRUE, width=4.75, height=3>>=
plot (f, TRUE, 40)
@
\end {center}

Note that it may be useful to include a third argument to increase the resolution of the plot.

We can construct a cumulative distribution function using the bmbvcdf() function. It takes the same arguments as bmbvpdf().

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
F = bmbvcdf (3.5, 0, 1, 1, 6.5, 0, 1, 1)
plot (F)
@

<<fig=TRUE, width=4.75, height=3>>=
plot (F, TRUE, 40)
@
\end {center}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Comparing Bimodal Distributions}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
We can compare different bimodal distributions using different covariance structures.

First, let's consider the bimodal distributions from the previous section.
\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
plot (f, all=TRUE)
@
\end {center}

Note that this requires the probability density function rather than the cumulative distribution function.

Second, let's consider bimodal distributions with a positive covariance structure.
\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
f2 = bmbvpdf (3.5, 3.5, 1, 1, 6.5, 6.5, 1, 1)
plot (f2, all=TRUE)
@
\end {center}

Third, let's consider bimodal distributions with a negative covariance structure.
\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
f3 = bmbvpdf (3.5, -3.5, 1, 1, 6.5, -6.5, 1, 1)
plot (f3, all=TRUE)
@
\end {center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Sample Data}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
The following section requires data rather than just parameters.

Lets create a normal like positively correlated positively skewed sample.

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
xy = generate.bivariate.sample (200)
x = xy [,1]
y = xy [,2]
plot (x, y)
@
\end {center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {Bivariate Kernel Distributions*}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(Wand, 2015) provides the KernSmooth package, which is used by this package.

We can use the kbvpdf() function to produce bivariate kernel density function estimation. The first two arguments are x and y. The second two arguments are the bandwidths.

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
f = kbvpdf (x, y, 20, 20)
plot (f)
@

<<fig=TRUE, width=4.75, height=3>>=
plot (f, TRUE)
@
\end {center}

We can use the kbvcdf() function to produce bivariate kernel distribution function estimation.

\begin {center}
<<fig=TRUE, width=4.75, height=3>>=
F = kbvcdf (x, y, 20, 20)
plot (F)
@

<<fig=TRUE, width=4.75, height=3>>=
plot (F, TRUE)
@
\end {center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section* {References}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Karlis, D and Ntzoufras, I. (2003). Analysis of sports data by using bivariate Poisson models.

Genz, A., Bretz, F., Miwa, T., Mi, X., Leisch, F., Scheipl, F. and Hothorn, T. (2018). mvtnorm: Multivariate Normal and t Distributions.

Wand, M. (2015). KernSmooth: Functions for Kernel Smoothing Supporting Wand \& Jones (1995)

\end{document}
